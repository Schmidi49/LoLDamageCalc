[x] Include Champion parameters (uses_mana, adaptive type, ranged)
[x] change spells to be std::function for abstraction
[x] Create a generic Spell class
[x] advance Defender(missing HP)
[x] implement generic spell: do calc damage and execute spell
[x] add set level functions for champion and spell levels
[x] disconnect in Destructors of Attackers and Defenders
[x] add flag for adding defender/attacker
[x] add Damage attributes
[x] add Mana
[x] add bonus AD
[x] add Damage reduction (mind Amumu + Wardens mail interactions)
[o] Finish Jinx-Attacker
[o] include Flag for incomplete setup (+ get methode for that, maybe block some functions when its not set)
[o] Finish Jinx Defender
[o] Add Rammus (as example Defender Champion)
[o] add champion factory
[o] rewrite testtool to be generic with user inputs test tool
[o] doxygen docu for all header, optional for bigger function comments
[o] code cleanup (go over clang warnings)

Optional (not in this branch)
[o] add generic auto attack
[o] advance environment (Damage, return Damage, healing(from lifesteal, spell, item effects, other stats)
[o] Add Shielding
[o] Ordering Slot Call Groups